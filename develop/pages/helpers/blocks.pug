mixin button-up(content, parent, modifier)
    - if (!content) content = {}
    - if (parent) parent += '__button-up'
    - if (!modifier) modifier = []
    - if (!Array.isArray(modifier)) modifier = [modifier]
    - modifier = modifier.map(mod => {
        - if (!mod) return mod
        - if (parent) return `${parent}--${mod}`
        - else return `button-up--${mod}`
    - })
    - const ext = [parent, modifier]
    button.button-up.-no-js(class=ext)
mixin footer(content, parent, modifier)
    - if (!content) content = {}
    - if (parent) parent += '__footer'
    - if (!modifier) modifier = []
    - if (!Array.isArray(modifier)) modifier = [modifier]
    - modifier = modifier.map(mod => {
        - if (!mod) return mod
        - if (parent) return `${parent}--${mod}`
        - else return `footer--${mod}`
    - })
    - const ext = [parent, modifier]
    footer.footer(class=ext)
        ._wrapper
            +logo(false, 'footer')
            p._title Footer
mixin header(content, parent, modifier)
    - if (!content) content = {}
    - if (parent) parent += '__header'
    - if (!modifier) modifier = []
    - if (!Array.isArray(modifier)) modifier = [modifier]
    - modifier = modifier.map(mod => {
        - if (!mod) return mod
        - if (parent) return `${parent}--${mod}`
        - else return `header--${mod}`
    - })
    - const ext = [parent, modifier]
    header.header(class=ext)
        +menu
        ._wrapper
            h1._title= content.title || 'Lorem ipsum dolor sit amet'
            p._subtitle= content.subtitle || 'ipsum dolor sit amet consectetur elit'
mixin logo(content, parent, modifier)
    - if (!content) content = {}
    - if (parent) parent += '__logo'
    - if (!modifier) modifier = []
    - if (!Array.isArray(modifier)) modifier = [modifier]
    - modifier = modifier.map(mod => {
        - if (!mod) return mod
        - if (parent) return `${parent}--${mod}`
        - else return `logo--${mod}`
    - })
    - const ext = [parent, modifier]
    a.logo(href="#" class=ext)= logo_text || content.text || nameSite
mixin menu(content, parent, modifier)
    - if (!content) content = {}
    - if (parent) parent += '__menu'
    - if (!modifier) modifier = []
    - if (!Array.isArray(modifier)) modifier = [modifier]
    - modifier = modifier.map(mod => {
        - if (!mod) return mod
        - if (parent) return `${parent}--${mod}`
        - else return `menu--${mod}`
    - })
    - const ext = [parent, modifier]
    nav.menu.-no-js(class=ext)
        ._wrapper
            +logo(false, 'menu')
            button._relay
            each val, idx in content.items || ['Home','About','Gallery','Blog','Contacts']
                if (idx === (content.active || 0))
                    a(href="#")._item.-active= val
                else
                    a(href="#")._item= val
mixin par(content, parent, modifier)
    - if (!content) content = {}
    - if (parent) parent += '__par'
    - if (!modifier) modifier = []
    - if (!Array.isArray(modifier)) modifier = [modifier]
    - modifier = modifier.map(mod => {
        - if (!mod) return mod
        - if (parent) return `${parent}--${mod}`
        - else return `par--${mod}`
    - })
    - const ext = [parent, modifier]
     - let text = content.text || 'Lorem ipsum dolor sit, amet consectetur adipisicing elit. Eligendi quaerat incidunt deserunt in eum iusto eius amet quis iste error. Distinctio explicabo facilis quo laboriosam enim. Rerum, laboriosam numquam. Atque cupiditate veritatis natus fugiat eum, iste quasi aspernatur mollitia quisquam molestias quam, voluptates, est nihil accusantium voluptatum blanditiis doloremque repellendus.'
     - if (!Array.isArray(text)) text = [text]
     each val in text
        p(class=ext)!= val